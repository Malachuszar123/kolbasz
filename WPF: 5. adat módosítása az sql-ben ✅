游댯游댯游댯5. adat m칩dos칤t치sa az sql-ben游댯游댯游댯

游댯GRID:
        <Button x:Name="atirat" Content="츼t칤r치s" HorizontalAlignment="Left" Margin="616,253,0,0" VerticalAlignment="Top" FontSize="20" Click="Button_Click_1"/>
        <TextBox x:Name="teljesneve" HorizontalAlignment="Left" Margin="541,83,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="231" FontSize="20"/>
        <TextBox x:Name="szuldatum" HorizontalAlignment="Left" Margin="541,120,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="231" FontSize="20"/>
        <TextBox x:Name="munkaneve" HorizontalAlignment="Left" Margin="541,156,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="231" FontSize="20"/>
        <TextBox x:Name="telefonszama" HorizontalAlignment="Left" Margin="541,194,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="231" FontSize="20"/>
        <TextBlock HorizontalAlignment="Left" Margin="541,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20"><Run Language="hu-hu" Text="Adatok m칩dos칤t치sa"/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="405,83,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20"><Run Language="hu-hu" Text="N칠v:"/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="405,120,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20"><Run Language="hu-hu" Text="Sz칲let칠si d:"/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="405,158,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20"><Run Language="hu-hu" Text="Munka:"/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="405,194,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20"><Run Language="hu-hu" Text="Telefon:"/></TextBlock>
        <ComboBox x:Name="lista" HorizontalAlignment="Left" Margin="141,67,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="lista_SelectionChanged"/>

游댯1x sql hivatkoz치s:
public partial class Regi : Window
{
    public MySqlConnection connection; //ez az 칰j
    public Neve()
    {
        InitializeComponent();
        InitializeDbConn();  //ez az 칰j
    }

    private void InitializeDbConn()  //ez az 칰j
    {  //ez az 칰j
        string connectionString = "Server=localhost; Database=vannevesjelszo; Uid=root; Pwd=;";  //ez az 칰j
        connection = new MySqlConnection(connectionString);  //ez az 칰j
    }  //ez az 칰j

游댯teljes k칩d: 游빝
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.Windows;
using MySql.Data.MySqlClient;

namespace WpfApp1qqqq
{
    public partial class MainWindow : Window
    {
        private MySqlConnection connection;
        private MySqlCommand command;

        public MainWindow()
        {
            InitializeComponent();
            InitializeDbConn();
            FillComboBox();
        }

        private void InitializeDbConn()
        {
            string connectionString = "Server=localhost; Database=vannevesjelszo; Uid=root; Pwd=;";
            connection = new MySqlConnection(connectionString);
            command = new MySqlCommand { Connection = connection };
        }

        private void FillComboBox()
        {
            try
            {
                connection.Open();
                string query = "SELECT dnev FROM dolgozok";
                command.CommandText = query;
                using (MySqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        lista.Items.Add(reader["dnev"].ToString());
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Hiba t칬rt칠nt az adatb치zis kapcsolat sor치n: " + ex.Message);
            }
            finally
            {
                connection.Close();
            }
        }

        private void Button_Click_1(object sender, RoutedEventArgs e)
        {
            if (lista.SelectedItem == null)
            {
                MessageBox.Show("Nincs n칠v kiv치lasztva.");
                return;
            }

            if (!ValidateInputs()) return;

            try
            {
                connection.Open();
                string query = "UPDATE dolgozok SET ";
                var updateFields = new List<string>();

                if (!string.IsNullOrWhiteSpace(teljesneve.Text))
                {
                    updateFields.Add("dnev = @teljesneve");
                    command.Parameters.AddWithValue("@teljesneve", teljesneve.Text);
                }

                if (!string.IsNullOrWhiteSpace(szuldatum.Text))
                {
                    updateFields.Add("dszul = @szuldatum");
                    command.Parameters.AddWithValue("@szuldatum", DateTime.ParseExact(szuldatum.Text, "yyyy.MM.dd", CultureInfo.InvariantCulture).ToString("yyyy-MM-dd"));
                }

                if (!string.IsNullOrWhiteSpace(munkaneve.Text))
                {
                    updateFields.Add("dmunk = @munkaneve");
                    command.Parameters.AddWithValue("@munkaneve", munkaneve.Text);
                }

                if (!string.IsNullOrWhiteSpace(telefonszama.Text))
                {
                    updateFields.Add("dtel = @telefonszama");
                    command.Parameters.AddWithValue("@telefonszama", telefonszama.Text);
                }

                if (updateFields.Count > 0)
                {
                    query += string.Join(", ", updateFields) + " WHERE dnev = @teljesneve_update";
                    command.Parameters.AddWithValue("@teljesneve_update", lista.SelectedItem.ToString());

                    command.CommandText = query;

                    int rowsAffected = command.ExecuteNonQuery();
                    MessageBox.Show(rowsAffected > 0 ? "Adatok sikeresen m칩dos칤tva." : "Nem siker칲lt m칩dos칤tani az adatokat.");
                }
                else
                {
                    MessageBox.Show("Nincs m칩dos칤that칩 adat.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Hiba t칬rt칠nt az adatok m칩dos칤t치sa sor치n: " + ex.Message);
            }
            finally
            {
                connection.Close();
                command.Parameters.Clear(); // Clear parameters after execution
            }
        }

        private bool ValidateInputs()
        {
            if (!string.IsNullOrWhiteSpace(szuldatum.Text) && !DateTime.TryParseExact(szuldatum.Text, "yyyy.MM.dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out _))
            {
                MessageBox.Show("A sz칲let칠si d치tum form치tuma helytelen (yyyy.MM.dd).");
                return false;
            }

            if (!string.IsNullOrWhiteSpace(telefonszama.Text) && !long.TryParse(telefonszama.Text, out _))
            {
                MessageBox.Show("A telefonsz치m csak sz치mokat tartalmazhat.");
                return false;
            }

            return true;
        }

        private void lista_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
        {
            // Itt lehetne kezelni a kijel칬lt sor v치ltoz치s치t
        }
    }
}

游댯游댯游댯游댯游댯游댯游댯游댯游댯游댯游댯游댯
